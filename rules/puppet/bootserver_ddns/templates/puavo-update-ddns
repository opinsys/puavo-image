#!/bin/sh

# This is a script for doing dynamic DNS updates.  Both forward and reverse
# records are updated.  It just requests puavo-rest to do the actual updates,
# passing the necessary DNS-key.
#
# Internal networks should be in the 10.0.0.0/8 range for reverse mappings
# to work (maybe probably? -- this is how we use it anyway).
#
# Key can be generated using the command:
#
# $ dnssec-keygen -a HMAC-MD5 -b 128 -n HOST puavo-key
# Kpuavo-key.+157+10879
#
# $ cat Kpuavo-key.+157+10879.private
# Private-key-format: v1.3
# Algorithm: 157 (HMAC_MD5)
# Key: n0FG8QLzMC6vKhqW61NWeQ==
# Bits: AAA=
# Created: 20130114153920
# Publish: 20130114153920
# Activate: 20130114153920
#
# Bind configuration (/etc/bind/named.conf.local) should look something 
# like this:
#
# key "puavo-updater" {
#        algorithm hmac-md5;
#        secret "n0FG8QLzMC6vKhqW61NWeQ==";
# };
#
# zone "example.org" {
#         type master;
#         file "/var/lib/bind/puavo_domain";
#         update-policy {
#                 grant puavo-updater zonesub ANY;
#         };
# };
#
# zone "246.10.in-addr.arpa" {
#         type master;
#         file "/var/lib/bind/puavo_domain_reverse";
#         update-policy {
#                 grant puavo-updater zonesub ANY;
#         };
# };
#
#

set -eu

logmsg() {
  logger -s -t puavo-update-ddns "$@"
}

type=$1
client_mac=$2
client_ip=$3
subdomain=$4
api_server=${5:-}

if [ -z "$api_server" ]; then
  api_server=$(puavo-resolve-api-server 2>/dev/null || true)
fi

nsupdate_keyfile_path='/etc/dhcp/ddns-keys/nsupdate.key'

key_name=$(awk '$1 == "key" {
             gsub(/^"/, "", $2); gsub(/"$/, "", $2); print $2; exit(0)
           }' "$nsupdate_keyfile_path")
key_secret=$(awk '$1 == "secret" {
               gsub(/^"/, "", $2); gsub(/";?$/, "", $2); print $2; exit(0)
             }' "$nsupdate_keyfile_path")

url="${api_server}/v3/bootserver_dns_update"

if [ -z "$key_name" ]; then
  logmsg -p user.err \
         'could not read key name from /etc/dhcp/ddns-keys/nsupdate.key'
  exit 1
fi

if [ -z "$key_secret" ]; then
  logmsg -p user.err \
         'could not read secret from /etc/dhcp/ddns-keys/nsupdate.key'
  exit 1
fi

if ! curl_output=$(
       printf %s "$key_secret" \
         | curl -X POST                                   \
                --cacert /etc/puavo/certs/rootca.pem      \
                --fail                                    \
                --header      'Authorization: Bootserver' \
                --form        'key_secret=<-'             \
                --form-string "key_name=${key_name}"      \
                --form-string "type=${type}"              \
                --form-string "client_mac=${client_mac}"  \
                --form-string "client_ip=${client_ip}"    \
                --form-string "subdomain=${subdomain}"    \
                --silent                                  \
                "$url"); then
  errmsg="error when updating DNS for ${client_mac}/${client_ip},"
  errmsg="$errmsg see puavo-rest log"
  logmsg -p user.err "$errmsg"
  exit 1
fi

logmsg -p user.info \
       "updated DNS for ${client_mac}/${client_ip}: ${curl_output}"

exit 0
