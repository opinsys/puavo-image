#!/bin/sh

set -eu

check_target_dir() {
  target_dir=$1

  test -n "$target_dir" || usage

  if [ ! -d "$target_dir" ]; then
    echo "There is no directory on path '${target_dir}'" >&2
    return 1
  fi
}

do_bootstrap() {
  target_dir=$1; shift
  configure_script=$1; shift

  test -n "$configure_script" || usage

  if [ ! -e "$configure_script" ]; then
    echo "There is no configure script on path '${configure_script}'" >&2
    return 1
  fi

  install -o root -g root -m 755 "$configure_script" \
                                 "${target_dir}/root/puavo-configure-image"

  puavo_configure_image "$target_dir" --bootstrap "$@"
}

do_install_packages() {
  target_dir=$1; shift
  package_dirs=$1; shift

  rm -f ${target_dir}/var/tmp/puavo-build-debs/*

  there_are_packages_to_install=false

  for package_dir in $package_dirs; do
    mkdir -p "${target_dir}/var/tmp/puavo-build-debs"
    for deb in ${package_dir}/*.deb; do
      test -e "$deb" || continue
      cp "$deb" "${target_dir}/var/tmp/puavo-build-debs"
      there_are_packages_to_install=true
    done
  done

  if $there_are_packages_to_install; then
    puavo_configure_image "$target_dir" -- --install-packages "$@"
    rm -f ${target_dir}/var/tmp/puavo-build-debs/*
  fi
}

do_update_buildrules_from_buildhost() {
  target_dir=$1; shift
  buildrule_dirs=$1; shift

  puavo_configure_image "$target_dir" --cleanup-buildrules "$@"

  for dir in $(echo "$buildrule_dirs" | tr , ' '); do
    if [ -d "$dir" ]; then
      tar -C "$dir" --exclude .gitignore -cf - debseeds puppet \
        | puavo_configure_image "$target_dir"                      \
                                --update-buildrules-from-buildhost \
                                "$@"
    fi
  done
}

puavo_configure_image() {
  target_dir=$1; shift
  chroot "$target_dir" /root/puavo-configure-image "$@"
}

usage() {
  cat <<'EOF' 
Usage:
  puavo-configure-chroot --bootstrap
                         --target-dir target-dir
                         --configure-script configure-script
                         -- (configure-script args)
  puavo-configure-chroot --update-buildrules-from-buildhost
                         --target-dir target-dir
                         --buildrule-dirs buildrule-dirs
                         -- (configure-script args)
  puavo-configure-chroot --install-packages package-dirs
                         --target-dir target-dir
                         -- (configure-script args)
  puavo-configure-chroot --run-configure
                         --target-dir target-dir
                         -- (configure-script args)
EOF
  exit 1
}

if ! args=$(getopt -n "$0" -o + \
              -l 'bootstrap,buildrule-dirs:,configure-script:,get-imagetype,install-packages:,run-configure,target-dir:,update-buildrules-from-buildhost' \
              -- "$@"); then
  usage
fi

action=
buildrule_dirs=
configure_script=
package_dirs=
target_dir=

eval "set -- $args"

while [ $# -ne 0 ]; do
  case "$1" in
    --bootstrap)
      action=bootstrap; shift
      ;;
    --buildrule-dirs)
      buildrule_dirs=$2; shift; shift
      ;;
    --configure-script)
      configure_script=$2; shift; shift
      ;;
    --install-packages)
      package_dirs=$2; shift; shift
      action=install-packages
      ;;
    --run-configure)
      action=run-configure; shift
      ;;
    --target-dir)
      target_dir=$2; shift; shift
      ;;
    --update-buildrules-from-buildhost)
      action=update-buildrules-from-buildhost; shift
      ;;
    --)
      shift; break
      ;;
    *)
      usage
      ;;
  esac
done

check_target_dir "$target_dir"

case "$action" in
  bootstrap)
    do_bootstrap "$target_dir" "$configure_script" "$@"
    ;;
  install-packages)
    do_install_packages "$target_dir" "$package_dirs" "$@"
    ;;
  run-configure)
    puavo_configure_image "$target_dir" "$@"
    ;;
  update-buildrules-from-buildhost)
    do_update_buildrules_from_buildhost "$target_dir" "$buildrule_dirs" "$@"
    ;;
  *)
    echo "Unknown action: '$action'" >&2
    usage
    ;;
esac
